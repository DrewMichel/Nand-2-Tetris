// 1: function Sys.init 0
(Sys.init)
// 2: push constant 4000
@4000
D=A
@SP
M=M+1
A=M-1
M=D
// 3: pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// 4: push constant 5000
@5000
D=A
@SP
M=M+1
A=M-1
M=D
// 5: pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// 6: call Sys.main 0
@Sys.mainlunchbreak1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(Sys.mainlunchbreak1)
// 7: pop temp 1
@SP
AM=M-1
D=M
@R6
M=D
// 8: label LOOP
(LOOP)
// 9: goto LOOP
@LOOP
0;JMP
// 10: function Sys.main 5
(Sys.main)
@0
D=A
@SP
M=M+1
A=M-1
M=D
@0
D=A
@LCL
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@1
D=A
@LCL
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@2
D=A
@LCL
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@3
D=A
@LCL
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@SP
M=M+1
A=M-1
M=D
@4
D=A
@LCL
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// 11: push constant 4001
@4001
D=A
@SP
M=M+1
A=M-1
M=D
// 12: pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// 13: push constant 5001
@5001
D=A
@SP
M=M+1
A=M-1
M=D
// 14: pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// 15: push constant 200
@200
D=A
@SP
M=M+1
A=M-1
M=D
// 16: pop local 1
@1
D=A
@LCL
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// 17: push constant 40
@40
D=A
@SP
M=M+1
A=M-1
M=D
// 18: pop local 2
@2
D=A
@LCL
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// 19: push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// 20: pop local 3
@3
D=A
@LCL
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// 21: push constant 123
@123
D=A
@SP
M=M+1
A=M-1
M=D
// 22: call Sys.add12 1
@Sys.add12lunchbreak2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(Sys.add12lunchbreak2)
// 23: pop temp 0
@SP
AM=M-1
D=M
@R5
M=D
// 24: push local 0
@0
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// 25: push local 1
@1
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// 26: push local 2
@2
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// 27: push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// 28: push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// 29: add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// 30: add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// 31: add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// 32: add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// 33: return
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@0
D=A
@ARG
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R14
A=M-D
D=M
@THAT
M=D
@2
D=A
@R14
A=M-D
D=M
@THIS
M=D
@3
D=A
@R14
A=M-D
D=M
@ARG
M=D
@4
D=A
@R14
A=M-D
D=M
@LCL
M=D
@R15
A=M
0;JMP
// 34: function Sys.add12 0
(Sys.add12)
// 35: push constant 4002
@4002
D=A
@SP
M=M+1
A=M-1
M=D
// 36: pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// 37: push constant 5002
@5002
D=A
@SP
M=M+1
A=M-1
M=D
// 38: pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// 39: push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// 40: push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// 41: add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// 42: return
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@0
D=A
@ARG
A=D+M
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R14
A=M-D
D=M
@THAT
M=D
@2
D=A
@R14
A=M-D
D=M
@THIS
M=D
@3
D=A
@R14
A=M-D
D=M
@ARG
M=D
@4
D=A
@R14
A=M-D
D=M
@LCL
M=D
@R15
A=M
0;JMP
